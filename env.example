# ===========================================
# QueryBot Configuration Template
#
# Copy this file to .env and configure your settings:
# cp env.example .env
#
# Then edit .env with your actual values
# ===========================================

# ===========================================
# APPLICATION SETTINGS
# ===========================================
BASE_HOST=localhost
USER_AUTH_ENABLED=false
DEBUG=false
FRONTEND_DIRECT_CALL=false

# ===========================================
# SQL DATABASE CONFIGURATION
# ===========================================
# Choose ONE of the following options:

# Option 1: Complete Database URL (Recommended for Cloud Databases)
# Uncomment and use ONE of these examples:

# Neon PostgreSQL (Serverless):
# SQLBOT_DB_URL=postgresql://user:password@ep-xxx.neon.tech/dbname?sslmode=require

# Supabase PostgreSQL:
# SQLBOT_DB_URL=postgresql://postgres:password@db.project.supabase.co:5432/postgres

# PlanetScale MySQL:
# SQLBOT_DB_URL=mysql://user:password@host.planetscale.com:3306/database?sslmode=require

# Railway PostgreSQL:
# SQLBOT_DB_URL=postgresql://user:password@containers-us-west-xxx.railway.app:5432/railway

# Option 2: Individual Parameters (For Local Development)
# Supported database types: mysql, postgresql
SQLBOT_DB_TYPE=mysql
SQLBOT_DB_HOST=localhost
SQLBOT_DB_PORT=3306
SQLBOT_DB_USER=root
SQLBOT_DB_PASSWORD=your_mysql_password
SQLBOT_DB_NAME=sql_assistant

# For local PostgreSQL, use these instead:
# SQLBOT_DB_TYPE=postgresql
# SQLBOT_DB_HOST=localhost
# SQLBOT_DB_PORT=5432
# SQLBOT_DB_USER=postgres
# SQLBOT_DB_PASSWORD=your_postgresql_password
# SQLBOT_DB_NAME=sql_assistant

# ===========================================
# VECTOR DATABASE CONFIGURATION
# ===========================================
# Choose ONE of the following options:

# Option 1: Zilliz Cloud (Recommended for Production)
# Sign up at https://cloud.zilliz.com/ and create a cluster
# Only need URI and token - super simple!
# VECTOR_DB_URI=https://in03-abc123.api.gcp-us-west1.zillizcloud.com:443
# VECTOR_DB_TOKEN=your_zilliz_cloud_api_key
# VECTOR_DB_DATABASE=default

# Option 2: Local Milvus (For Development)
# Install with: docker run -d --name milvus-standalone -p 19530:19530 milvusdb/milvus:latest
VECTOR_DB_HOST=localhost
VECTOR_DB_PORT=19530
VECTOR_DB_USERNAME=
VECTOR_DB_PASSWORD=
VECTOR_DB_DATABASE=default

# ===========================================
# AI MODEL CONFIGURATION
# ===========================================

# Large Language Model (LLM) Settings
# Supports OpenAI-compatible APIs (OpenAI, SiliconFlow, DeepSeek, etc.)
LLM_MODEL=Qwen/Qwen2.5-72B-Instruct
LLM_API_KEY=sk-your_api_key
LLM_API_BASE=https://api.siliconflow.cn/v1

# Other providers: OpenAI, DeepSeek, etc.

# Embedding Model Settings
# Used for vector search and semantic matching
EMBEDDING_API_KEY=your_embedding_api_key
EMBEDDING_API_BASE=https://api.siliconflow.cn/v1
EMBEDDING_MODEL=bge-large-en-v1.5

# Other providers: OpenAI, etc.

# ===========================================
# MONITORING & OBSERVABILITY
# ===========================================

# Langfuse - LLM Observability Platform
# Sign up at https://cloud.langfuse.com/ for free monitoring
LANGFUSE_ENABLED=false
LANGFUSE_PUBLIC_KEY=pk-lf-your_langfuse_public_key
LANGFUSE_SECRET_KEY=sk-lf-your_langfuse_secret_key
LANGFUSE_HOST=https://cloud.langfuse.com

# Phoenix - Alternative Open Source Monitoring
# Automatically starts local monitoring dashboard
PHOENIX_ENABLED=false

# ===========================================
# QUICK START
# ===========================================
# 1. Copy this file: cp env.example .env
# 2. Edit .env with your actual values
# 3. Start: ./start_local.sh